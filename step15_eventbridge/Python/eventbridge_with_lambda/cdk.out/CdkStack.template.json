{
  "Resources": {
    "producerLambdaServiceRole51681B99": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/producerLambda/ServiceRole/Resource"
      }
    },
    "producerLambdaServiceRoleDefaultPolicy30D41911": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "producerLambdaServiceRoleDefaultPolicy30D41911",
        "Roles": [
          {
            "Ref": "producerLambdaServiceRole51681B99"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/producerLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "producerLambda41DD6C47": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3Bucket127A6480"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3VersionKey6837B7E2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3VersionKey6837B7E2"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "producer.handler",
        "Role": {
          "Fn::GetAtt": [
            "producerLambdaServiceRole51681B99",
            "Arn"
          ]
        },
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "producerLambdaServiceRoleDefaultPolicy30D41911",
        "producerLambdaServiceRole51681B99"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/producerLambda/Resource",
        "aws:asset:path": "asset.c57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519",
        "aws:asset:property": "Code"
      }
    },
    "testApiD6ECAB50": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "testApi"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Resource"
      }
    },
    "testApiCloudWatchRole8A11639C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/CloudWatchRole/Resource"
      }
    },
    "testApiAccountA6723CBB": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "testApiCloudWatchRole8A11639C",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "testApiD6ECAB50"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Account"
      }
    },
    "testApiDeployment3727A0B9060d8f9557db914275a479bd6959765c": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "testApiD6ECAB50"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "testApiproxyANYC53F2608",
        "testApiproxyA0E5503A",
        "testApiANYDC600770"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Deployment/Resource"
      }
    },
    "testApiDeploymentStageprodCE051BE8": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "testApiD6ECAB50"
        },
        "DeploymentId": {
          "Ref": "testApiDeployment3727A0B9060d8f9557db914275a479bd6959765c"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/DeploymentStage.prod/Resource"
      }
    },
    "testApiproxyA0E5503A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testApiD6ECAB50",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "testApiD6ECAB50"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/{proxy+}/Resource"
      }
    },
    "testApiproxyANYApiPermissionCdkStacktestApiA247CD39ANYproxy96F6E207": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "producerLambda41DD6C47",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "testApiD6ECAB50"
              },
              "/",
              {
                "Ref": "testApiDeploymentStageprodCE051BE8"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/{proxy+}/ANY/ApiPermission.CdkStacktestApiA247CD39.ANY..{proxy+}"
      }
    },
    "testApiproxyANYApiPermissionTestCdkStacktestApiA247CD39ANYproxy9BD1D428": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "producerLambda41DD6C47",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "testApiD6ECAB50"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/{proxy+}/ANY/ApiPermission.Test.CdkStacktestApiA247CD39.ANY..{proxy+}"
      }
    },
    "testApiproxyANYC53F2608": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "testApiproxyA0E5503A"
        },
        "RestApiId": {
          "Ref": "testApiD6ECAB50"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "producerLambda41DD6C47",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/{proxy+}/ANY/Resource"
      }
    },
    "testApiANYApiPermissionCdkStacktestApiA247CD39ANY7AC40417": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "producerLambda41DD6C47",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "testApiD6ECAB50"
              },
              "/",
              {
                "Ref": "testApiDeploymentStageprodCE051BE8"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/ANY/ApiPermission.CdkStacktestApiA247CD39.ANY.."
      }
    },
    "testApiANYApiPermissionTestCdkStacktestApiA247CD39ANY5757244D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "producerLambda41DD6C47",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "testApiD6ECAB50"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/ANY/ApiPermission.Test.CdkStacktestApiA247CD39.ANY.."
      }
    },
    "testApiANYDC600770": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "testApiD6ECAB50",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "testApiD6ECAB50"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "producerLambda41DD6C47",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/testApi/Default/ANY/Resource"
      }
    },
    "consumerLambdaServiceRole88BBF95B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/consumerLambda/ServiceRole/Resource"
      }
    },
    "consumerLambda091FCDB7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3Bucket127A6480"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3VersionKey6837B7E2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3VersionKey6837B7E2"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "consumer.handler",
        "Role": {
          "Fn::GetAtt": [
            "consumerLambdaServiceRole88BBF95B",
            "Arn"
          ]
        },
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "consumerLambdaServiceRole88BBF95B"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/consumerLambda/Resource",
        "aws:asset:path": "asset.c57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519",
        "aws:asset:property": "Code"
      }
    },
    "orderPKLambda808C5D21": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Filter events that come from country PK and invoke lambda with it.",
        "EventPattern": {
          "source": [
            "custom.api"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "consumerLambda091FCDB7",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/orderPKLambda/Resource"
      }
    },
    "orderPKLambdaAllowEventRuleCdkStackorderPKLambda710492712319D4F5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "consumerLambda091FCDB7",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "orderPKLambda808C5D21",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/orderPKLambda/AllowEventRuleCdkStackorderPKLambda71049271"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.87.1,@aws-cdk/assets=1.75.0,@aws-cdk/aws-apigateway=1.75.0,@aws-cdk/aws-applicationautoscaling=1.75.0,@aws-cdk/aws-autoscaling=1.75.0,@aws-cdk/aws-autoscaling-common=1.75.0,@aws-cdk/aws-autoscaling-hooktargets=1.75.0,@aws-cdk/aws-cloudwatch=1.75.0,@aws-cdk/aws-codeguruprofiler=1.75.0,@aws-cdk/aws-ec2=1.75.0,@aws-cdk/aws-ecr=1.75.0,@aws-cdk/aws-ecr-assets=1.75.0,@aws-cdk/aws-ecs=1.75.0,@aws-cdk/aws-elasticloadbalancingv2=1.75.0,@aws-cdk/aws-events=1.75.0,@aws-cdk/aws-events-targets=1.75.0,@aws-cdk/aws-iam=1.75.0,@aws-cdk/aws-kms=1.75.0,@aws-cdk/aws-lambda=1.75.0,@aws-cdk/aws-logs=1.75.0,@aws-cdk/aws-s3=1.75.0,@aws-cdk/aws-s3-assets=1.75.0,@aws-cdk/aws-servicediscovery=1.75.0,@aws-cdk/aws-sns=1.75.0,@aws-cdk/aws-sns-subscriptions=1.75.0,@aws-cdk/aws-sqs=1.75.0,@aws-cdk/aws-ssm=1.75.0,@aws-cdk/cloud-assembly-schema=1.75.0,@aws-cdk/core=1.75.0,@aws-cdk/custom-resources=1.75.0,@aws-cdk/cx-api=1.75.0,@aws-cdk/region-info=1.75.0,jsii-runtime=node.js/v14.15.1"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3Bucket127A6480": {
      "Type": "String",
      "Description": "S3 bucket for asset \"c57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519\""
    },
    "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519S3VersionKey6837B7E2": {
      "Type": "String",
      "Description": "S3 key for asset version \"c57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519\""
    },
    "AssetParametersc57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519ArtifactHashBD375D62": {
      "Type": "String",
      "Description": "Artifact hash for asset \"c57712811bea660c4455f112901f0d244b88bcb888cb9319fac745c63fff5519\""
    }
  },
  "Outputs": {
    "testApiEndpointC9D07ADA": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "testApiD6ECAB50"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "testApiDeploymentStageprodCE051BE8"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}