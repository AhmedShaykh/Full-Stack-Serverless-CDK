{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/Resource"
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/Subnet"
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/EIP"
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/NATGateway"
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/Subnet"
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/EIP"
      }
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/NATGateway"
      }
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/Subnet"
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/RouteTable"
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/Subnet"
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/RouteTable"
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/IGW"
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Vpc/VPCGW"
      }
    },
    "lambdaEfsFileSystemE3027A40": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/lambdaEfsFileSystem"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/Resource"
      }
    },
    "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "StepEfsWithLambdaStack/lambdaEfsFileSystem"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup/Resource"
      }
    },
    "lambdaEfsFileSystemEfsSecurityGroupfromStepEfsWithLambdaStackefsLambdaFunctionSecurityGroup891076352049FFA57C0F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from StepEfsWithLambdaStackefsLambdaFunctionSecurityGroup89107635:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "efsLambdaFunctionSecurityGroup5DBE1069",
            "GroupId"
          ]
        },
        "ToPort": 2049
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup/from StepEfsWithLambdaStackefsLambdaFunctionSecurityGroup89107635:2049"
      }
    },
    "lambdaEfsFileSystemEfsMountTarget1EEF1356D": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "lambdaEfsFileSystemE3027A40"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsMountTarget1"
      }
    },
    "lambdaEfsFileSystemEfsMountTarget2FACC31EB": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "lambdaEfsFileSystemE3027A40"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsMountTarget2"
      }
    },
    "lambdaEfsFileSystemAccessPointBC696AB0": {
      "Type": "AWS::EFS::AccessPoint",
      "Properties": {
        "FileSystemId": {
          "Ref": "lambdaEfsFileSystemE3027A40"
        },
        "PosixUser": {
          "Gid": "1001",
          "Uid": "1001"
        },
        "RootDirectory": {
          "CreationInfo": {
            "OwnerGid": "1001",
            "OwnerUid": "1001",
            "Permissions": "750"
          },
          "Path": "/export/lambda"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/AccessPoint/Resource"
      }
    },
    "efsLambdaFunctionServiceRole7C103DEA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "DependsOn": [
        "lambdaEfsFileSystemEfsMountTarget1EEF1356D",
        "lambdaEfsFileSystemEfsMountTarget2FACC31EB"
      ],
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/efsLambdaFunction/ServiceRole/Resource"
      }
    },
    "efsLambdaFunctionServiceRoleDefaultPolicyAD830756": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "elasticfilesystem:ClientMount",
              "Condition": {
                "StringEquals": {
                  "elasticfilesystem:AccessPointArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":elasticfilesystem:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":access-point/",
                        {
                          "Ref": "lambdaEfsFileSystemAccessPointBC696AB0"
                        }
                      ]
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "elasticfilesystem:ClientWrite",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":elasticfilesystem:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":file-system/",
                    {
                      "Ref": "lambdaEfsFileSystemE3027A40"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "efsLambdaFunctionServiceRoleDefaultPolicyAD830756",
        "Roles": [
          {
            "Ref": "efsLambdaFunctionServiceRole7C103DEA"
          }
        ]
      },
      "DependsOn": [
        "lambdaEfsFileSystemEfsMountTarget1EEF1356D",
        "lambdaEfsFileSystemEfsMountTarget2FACC31EB"
      ],
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/efsLambdaFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "efsLambdaFunctionSecurityGroup5DBE1069": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function StepEfsWithLambdaStackefsLambdaFunctionFA9C29D3",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "DependsOn": [
        "lambdaEfsFileSystemEfsMountTarget1EEF1356D",
        "lambdaEfsFileSystemEfsMountTarget2FACC31EB"
      ],
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/efsLambdaFunction/SecurityGroup/Resource"
      }
    },
    "efsLambdaFunctionACCEBA5E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3BucketB3699850"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3VersionKey65064AB7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3VersionKey65064AB7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "msg.handler",
        "Role": {
          "Fn::GetAtt": [
            "efsLambdaFunctionServiceRole7C103DEA",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "FileSystemConfigs": [
          {
            "LocalMountPath": "/mnt/msg",
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":access-point/",
                  {
                    "Ref": "lambdaEfsFileSystemAccessPointBC696AB0"
                  }
                ]
              ]
            }
          }
        ],
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "efsLambdaFunctionSecurityGroup5DBE1069",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A"
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
            }
          ]
        }
      },
      "DependsOn": [
        "efsLambdaFunctionServiceRoleDefaultPolicyAD830756",
        "efsLambdaFunctionServiceRole7C103DEA",
        "lambdaEfsFileSystemEfsMountTarget1EEF1356D",
        "lambdaEfsFileSystemEfsMountTarget2FACC31EB"
      ],
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/efsLambdaFunction/Resource",
        "aws:asset:path": "asset.32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6",
        "aws:asset:property": "Code"
      }
    },
    "EndpointEEF1FD8F": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "Endpoint",
        "ProtocolType": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Endpoint/Resource"
      }
    },
    "EndpointDefaultRouteStepEfsWithLambdaStackEndpointDefaultRouteD91A53CCPermission2ADC6561": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "efsLambdaFunctionACCEBA5E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointEEF1FD8F"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/StepEfsWithLambdaStackEndpointDefaultRouteD91A53CC-Permission"
      }
    },
    "EndpointDefaultRouteDefaultRouteIntegration4584A785": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "efsLambdaFunctionACCEBA5E",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/DefaultRoute-Integration/Resource"
      }
    },
    "EndpointDefaultRouteB7B22F2B": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "EndpointDefaultRouteDefaultRouteIntegration4584A785"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/Resource"
      }
    },
    "EndpointDefaultStage0AD21F27": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "StageName": "$default",
        "AutoDeploy": true
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/Endpoint/DefaultStage/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.75.0,@aws-cdk/assets=1.78.0,@aws-cdk/aws-apigatewayv2=1.78.0,@aws-cdk/aws-apigatewayv2-integrations=1.78.0,@aws-cdk/aws-applicationautoscaling=1.78.0,@aws-cdk/aws-autoscaling-common=1.78.0,@aws-cdk/aws-cloudwatch=1.78.0,@aws-cdk/aws-codeguruprofiler=1.78.0,@aws-cdk/aws-ec2=1.78.0,@aws-cdk/aws-ecr=1.78.0,@aws-cdk/aws-ecr-assets=1.78.0,@aws-cdk/aws-efs=1.78.0,@aws-cdk/aws-elasticloadbalancingv2=1.78.0,@aws-cdk/aws-events=1.78.0,@aws-cdk/aws-iam=1.78.0,@aws-cdk/aws-kms=1.78.0,@aws-cdk/aws-lambda=1.78.0,@aws-cdk/aws-logs=1.78.0,@aws-cdk/aws-s3=1.78.0,@aws-cdk/aws-s3-assets=1.78.0,@aws-cdk/aws-sqs=1.78.0,@aws-cdk/aws-ssm=1.78.0,@aws-cdk/cloud-assembly-schema=1.78.0,@aws-cdk/core=1.78.0,@aws-cdk/cx-api=1.78.0,@aws-cdk/region-info=1.78.0,jsii-runtime=node.js/v12.20.0"
      },
      "Metadata": {
        "aws:cdk:path": "StepEfsWithLambdaStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3BucketB3699850": {
      "Type": "String",
      "Description": "S3 bucket for asset \"32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6\""
    },
    "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3VersionKey65064AB7": {
      "Type": "String",
      "Description": "S3 key for asset version \"32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6\""
    },
    "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6ArtifactHashF2B8B14C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6\""
    }
  },
  "Outputs": {
    "HTTPAPIUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EndpointEEF1FD8F"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}