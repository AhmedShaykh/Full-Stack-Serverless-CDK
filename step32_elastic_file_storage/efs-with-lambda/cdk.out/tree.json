{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "StepEfsWithLambdaStack": {
        "id": "StepEfsWithLambdaStack",
        "path": "StepEfsWithLambdaStack",
        "children": {
          "Vpc": {
            "id": "Vpc",
            "path": "StepEfsWithLambdaStack/Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "StepEfsWithLambdaStack/Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "StepEfsWithLambdaStack/Vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet1EIPD7E02669",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "StepEfsWithLambdaStack/Vpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet2EIP3C605A87",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet1Subnet536B997A"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "StepEfsWithLambdaStack/Vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet2NATGateway9182C01D"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "StepEfsWithLambdaStack/Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "StepEfsWithLambdaStack/Vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "StepEfsWithLambdaStack/Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    },
                    "internetGatewayId": {
                      "Ref": "VpcIGWD7BA715C"
                    }
                  }
                }
              }
            }
          },
          "lambdaEfsFileSystem": {
            "id": "lambdaEfsFileSystem",
            "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::FileSystem",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemTags": [
                      {
                        "key": "Name",
                        "value": "StepEfsWithLambdaStack/lambdaEfsFileSystem"
                      }
                    ]
                  }
                }
              },
              "EfsSecurityGroup": {
                "id": "EfsSecurityGroup",
                "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "StepEfsWithLambdaStack/lambdaEfsFileSystem"
                          }
                        ],
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        }
                      }
                    }
                  },
                  "from StepEfsWithLambdaStackefsLambdaFunctionSecurityGroup89107635:2049": {
                    "id": "from StepEfsWithLambdaStackefsLambdaFunctionSecurityGroup89107635:2049",
                    "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsSecurityGroup/from StepEfsWithLambdaStackefsLambdaFunctionSecurityGroup89107635:2049",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from StepEfsWithLambdaStackefsLambdaFunctionSecurityGroup89107635:2049",
                        "fromPort": 2049,
                        "groupId": {
                          "Fn::GetAtt": [
                            "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "efsLambdaFunctionSecurityGroup5DBE1069",
                            "GroupId"
                          ]
                        },
                        "toPort": 2049
                      }
                    }
                  }
                }
              },
              "EfsMountTarget1": {
                "id": "EfsMountTarget1",
                "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsMountTarget1",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::MountTarget",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemId": {
                      "Ref": "lambdaEfsFileSystemE3027A40"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Ref": "VpcPrivateSubnet1Subnet536B997A"
                    }
                  }
                }
              },
              "EfsMountTarget2": {
                "id": "EfsMountTarget2",
                "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/EfsMountTarget2",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::MountTarget",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemId": {
                      "Ref": "lambdaEfsFileSystemE3027A40"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "lambdaEfsFileSystemEfsSecurityGroup4E25F4EF",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                    }
                  }
                }
              },
              "AccessPoint": {
                "id": "AccessPoint",
                "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/AccessPoint",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepEfsWithLambdaStack/lambdaEfsFileSystem/AccessPoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EFS::AccessPoint",
                      "aws:cdk:cloudformation:props": {
                        "fileSystemId": {
                          "Ref": "lambdaEfsFileSystemE3027A40"
                        },
                        "posixUser": {
                          "uid": "1001",
                          "gid": "1001"
                        },
                        "rootDirectory": {
                          "creationInfo": {
                            "ownerGid": "1001",
                            "ownerUid": "1001",
                            "permissions": "750"
                          },
                          "path": "/export/lambda"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "efsLambdaFunction": {
            "id": "efsLambdaFunction",
            "path": "StepEfsWithLambdaStack/efsLambdaFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "StepEfsWithLambdaStack/efsLambdaFunction/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepEfsWithLambdaStack/efsLambdaFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "StepEfsWithLambdaStack/efsLambdaFunction/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "StepEfsWithLambdaStack/efsLambdaFunction/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "elasticfilesystem:ClientMount",
                                  "Condition": {
                                    "StringEquals": {
                                      "elasticfilesystem:AccessPointArn": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":elasticfilesystem:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":access-point/",
                                            {
                                              "Ref": "lambdaEfsFileSystemAccessPointBC696AB0"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  },
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "elasticfilesystem:ClientWrite",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":elasticfilesystem:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":file-system/",
                                        {
                                          "Ref": "lambdaEfsFileSystemE3027A40"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "efsLambdaFunctionServiceRoleDefaultPolicyAD830756",
                            "roles": [
                              {
                                "Ref": "efsLambdaFunctionServiceRole7C103DEA"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "StepEfsWithLambdaStack/efsLambdaFunction/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "StepEfsWithLambdaStack/efsLambdaFunction/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "StepEfsWithLambdaStack/efsLambdaFunction/Code/AssetBucket"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "StepEfsWithLambdaStack/efsLambdaFunction/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepEfsWithLambdaStack/efsLambdaFunction/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatic security group for Lambda Function StepEfsWithLambdaStackefsLambdaFunctionFA9C29D3",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "StepEfsWithLambdaStack/efsLambdaFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3BucketB3699850"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3VersionKey65064AB7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6S3VersionKey65064AB7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "msg.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "efsLambdaFunctionServiceRole7C103DEA",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "vpcConfig": {
                      "subnetIds": [
                        {
                          "Ref": "VpcPrivateSubnet1Subnet536B997A"
                        },
                        {
                          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                        }
                      ],
                      "securityGroupIds": [
                        {
                          "Fn::GetAtt": [
                            "efsLambdaFunctionSecurityGroup5DBE1069",
                            "GroupId"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "StepEfsWithLambdaStack/AssetParameters",
            "children": {
              "32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6": {
                "id": "32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6",
                "path": "StepEfsWithLambdaStack/AssetParameters/32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "StepEfsWithLambdaStack/AssetParameters/32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "StepEfsWithLambdaStack/AssetParameters/32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "StepEfsWithLambdaStack/AssetParameters/32bfdff99c6e358f7f5e923e80d64fa6d3d90d187a3c9ebb45f2d6eaa4a803e6/ArtifactHash"
                  }
                }
              }
            }
          },
          "Endpoint": {
            "id": "Endpoint",
            "path": "StepEfsWithLambdaStack/Endpoint",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "StepEfsWithLambdaStack/Endpoint/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Api",
                  "aws:cdk:cloudformation:props": {
                    "name": "Endpoint",
                    "protocolType": "HTTP"
                  }
                }
              },
              "DefaultRoute": {
                "id": "DefaultRoute",
                "path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute",
                "children": {
                  "StepEfsWithLambdaStackEndpointDefaultRouteD91A53CC-Permission": {
                    "id": "StepEfsWithLambdaStackEndpointDefaultRouteD91A53CC-Permission",
                    "path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/StepEfsWithLambdaStackEndpointDefaultRouteD91A53CC-Permission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "efsLambdaFunctionACCEBA5E",
                            "Arn"
                          ]
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":execute-api:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":",
                              {
                                "Ref": "EndpointEEF1FD8F"
                              },
                              "/*/*"
                            ]
                          ]
                        }
                      }
                    }
                  },
                  "DefaultRoute-Integration": {
                    "id": "DefaultRoute-Integration",
                    "path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/DefaultRoute-Integration",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/DefaultRoute-Integration/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
                          "aws:cdk:cloudformation:props": {
                            "apiId": {
                              "Ref": "EndpointEEF1FD8F"
                            },
                            "integrationType": "AWS_PROXY",
                            "integrationUri": {
                              "Fn::GetAtt": [
                                "efsLambdaFunctionACCEBA5E",
                                "Arn"
                              ]
                            },
                            "payloadFormatVersion": "2.0"
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "StepEfsWithLambdaStack/Endpoint/DefaultRoute/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "EndpointEEF1FD8F"
                        },
                        "routeKey": "$default",
                        "target": {
                          "Fn::Join": [
                            "",
                            [
                              "integrations/",
                              {
                                "Ref": "EndpointDefaultRouteDefaultRouteIntegration4584A785"
                              }
                            ]
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "DefaultStage": {
                "id": "DefaultStage",
                "path": "StepEfsWithLambdaStack/Endpoint/DefaultStage",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepEfsWithLambdaStack/Endpoint/DefaultStage/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Stage",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "EndpointEEF1FD8F"
                        },
                        "stageName": "$default",
                        "autoDeploy": true
                      }
                    }
                  }
                }
              }
            }
          },
          "HTTP API Url": {
            "id": "HTTP API Url",
            "path": "StepEfsWithLambdaStack/HTTP API Url"
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "StepEfsWithLambdaStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "StepEfsWithLambdaStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "StepEfsWithLambdaStack/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}